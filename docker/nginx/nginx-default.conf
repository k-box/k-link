map $http_x_forwarded_proto $myscheme { default $scheme; https https; }
map $myscheme $php_https { default off; https on; }

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    server_name _;
    
    server_tokens off; ## Don't show the nginx version number, a security best practice

    root /usr/share/nginx/html;

    keepalive_timeout   70;

    client_max_body_size 1024M;

    index index.html;

    charset utf-8;

    # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile off;

    # Add stdout logging
	error_log /dev/stdout info;
	access_log /dev/stdout;
    ## If there is the necessity to debug rewrite rules in this configuration file
    ## rewrite_log on;
	## error_log /dev/stdout notice;

    ## default headers
    
    ## CORS header handling https://enable-cors.org/server_nginx.html, 
    ##   http://nginx.org/en/docs/http/ngx_http_headers_module.html and 
    ##   http://tech.osteel.me/posts/2015/07/19/handling-cors-with-nginx.html 

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Max-Age' '1';
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'x-requested-with,Origin,Content-Type,Accept,Authorization' always;

    ## Default headers, in part oriented for recurity
    ## https://peteris.rocks/blog/exotic-http-headers/
    add_header 'X-Frame-Options' 'SAMEORIGIN' always;
    add_header 'X-XSS-Protection' '1; mode=block' always;
    add_header 'X-Content-Type-Options' 'nosniff' always;

    add_header 'X-UA-Compatible' 'IE=edge' always;


    location / {

        if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid
            add_header 'Access-Control-Max-Age' '1';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        index index.html;

    }

    
    location ~ /registry {

        ## Registry rule must be first, as the path bundles is also used in this case

        rewrite ^/registry/(.*) /$1  break;
        rewrite ^/registry$ /  break;
        proxy_pass http://registry;

    }
    
    location ~ /(docs|bundles|_wdt|_profiler|swagger.json) {

        ## Rule for the K-Search Swagger documentation

        if ($request_method = 'OPTIONS') {
            
            # Tell client that this pre-flight info is valid
            add_header 'Access-Control-Max-Age' '1';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        rewrite ^/(.*) /$1 break;
        proxy_pass http://ksearch;

    }
    
    location /api {

        if ($request_method = 'OPTIONS') {
            # continue of the CORS related headers
            # add_header 'Access-Control-Allow-Origin' $http_origin always;
            # add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            # add_header 'Access-Control-Allow-Credentials' 'true';
            # add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization';
            
            # Tell client that this pre-flight info is valid
            add_header 'Access-Control-Max-Age' '1';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://ksearch/api;

    }

    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
    }

    location = /robots.txt  { 
        access_log off; 
        log_not_found off; 
    }

    location ~ /\.ht {
        deny all;
    }

}
